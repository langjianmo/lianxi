<?php
declare (strict_types=1);

namespace app\shop\controller;

use app\common\controller\WeChatService;
use think\facade\Db;

class Account extends Common
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {

        if (request()->isPost()) {
            $post = input("post.", "", "trim");
            foreach ($post as $k => $v) {
                if (empty($v)) unset($post[$k]);
                if ($k == "BankCard") unset($post[$k]);
            }
            if ($post) {
                Db::table("do_shop")
                    ->where(["id" => $this->shop["id"]])
                    ->update($post);
                $return = [
                    "code" => 0,
                    "msg" => "修改成功",
                    "url" => (string)url("index")
                ];
            } else {
                $return = [
                    "code" => 1,
                    "msg" => "修改失败,密码不能为空",
                    "url" => (string)url("index")
                ];

            }

            return json($return);
        } else {
            $vars['notice_proxy_id'] = 0;
            $vars['shop_id'] = $this->shop['id'];
            do {
                $tempwxstate = md5(strval(time() + mt_rand(100000000, 999999999)));
                $wxstate = Db::table('do_notice')
                    ->where('wxstate', $tempwxstate)
                    ->find();
            } while ($wxstate !== null);

            $vars['wxstate'] = $tempwxstate;
            $vars['imgurl'] = getmakeQrCode($vars);
            $vars['openid'] = Db::table('do_mini_user')
                ->alias('a')
                ->fieldRaw("a.*,CONCAT(LEFT ( a.BankCard, 5 ),LPAD ( RIGHT ( a.BankCard, 5 ), length( a.BankCard )- 5, \"*\" )) BankCard")
                ->join('do_notice b', 'a.notice_id = b.id')
                ->where('a.id', $this->user['id'])
                ->value('b.openid');
            $data = Db::table("do_shop")->where(["id" => $vars['shop_id']])->find();
            return view('', array_merge($vars, $data));
        }
    }

    public function sendNotice()
    {
        $openid = input('get.openid');
        $wx = new WeChatService();
        return $wx->send_refund_notice($openid);
    }

    public function postbind()
    {
        $wechat = system_config('wechat');
        $APPID = $wechat['AppID'];
        $state = base64_encode(json_encode(input('get.')));
        $res['state'] = $state;
        $redirect_url = 'https://wx.scweichuang.com/index/Wechatsever.html';
        $res['code'] = 0;
        $res['url'] = makeQrCode("https://open.weixin.qq.com/connect/oauth2/authorize?appid=$APPID&redirect_uri=" . urlencode($redirect_url) . "&response_type=code&scope=snsapi_base&state=$state#wechat_redirect");
        return json($res);
    }

    public function queryOpenid()
    {
        $wxstate = input('get.wxstate');
        $wxstate = Db::table('do_notice')
            ->where('wxstate', $wxstate)
            ->find();

        if ($wxstate === null) {
            $res['code'] = 1;
        } else {
            Db::table("do_mini_user")
                ->where('id', $this->user['id'])
                ->update(['notice_id' => $wxstate['id']]);
            $res['code'] = 0;
            $res['data'] = $wxstate;
        }
        return json($res);
    }
}
